<!DOCTYPE html>
<html>

<head>
  <title>Carritos</title>
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <style>
    .quantity-section {
      margin-top: auto;
    }

    .thumbnail-image {
      max-width: 100%;
      height: auto;
      max-height: 200px;
      /* Esto limita la altura de la imagen si es muy alta */
    }
  </style>
</head>

<body>
  <div class="container">
    <h1>Carritos</h1>
    <h2>Lista de todos los carritos</h2>
    <div class="row">
      <div class="col-md-6">
        {{#each carts}}
        <div class="card mb-3">
          <div class="card-body">
            <h5 class="card-title">ID del Carrito: {{_id}}</h5>
            <p class="card-text">Fecha de creacion: {{date}}</p>
            <p class="card-text">Productos:</p>
            <ul class="list-group list-group-flush">
              {{#each products}}
              <li class="list-group-item">
                <h6>ID del Producto: {{product._id}}</h6>
                <p>Título: {{product.title}}</p>
                <p class="card-text"><img class="thumbnail-image" src="{{this.thumbnail}}" alt="Thumbnail"></p>
                <p>Descripción: {{product.description}}</p>
                <p>Categoría: {{product.category}}</p>
                <p class="price">Precio: ${{product.price}}</p>
                <p>Estado: {{product.status}}</p>
                <div class="quantity-section d-flex align-items-center mt-3">
                  <div class="btn-group">
                    <span class="mr-2">Cantidad:</span>
                    <button class="btn btn-sm btn-primary"
                      onclick="decrementarCantidad('{{../_id}}', '{{product._id}}')">-</button>
                    <span id="quantity-{{../_id}}-{{product._id}}" class="mx-2" data-quantity="{{quantity}}">{{quantity}}</span>
                    <button class="btn btn-sm btn-primary"
                      onclick="incrementarCantidad('{{../_id}}', '{{product._id}}')">+</button>
                      <div><a href="/api/carts/{{../_id}}/products/{{product._id}}" class="btn btn-danger btn-sm">Eliminar Producto</a></div>
                  </div>
                </div>
              </li>
              {{/each}}
            </ul>
          </div>
        </div>
        {{/each}}
      </div>
      {{#each carts}}
      <div class="col-md-6">
        <div class="card">
          <div class="card-body">
            <h5 class="card-title">Su compra</h5>
            <h6 class="card-subtitle mb-2 text-muted">Compra total</h6>
            <p class="card-text" id="total-price"></p>
            <h6 class="card-subtitle mb-2 text-muted">Cantidad total de productos</h6>
            <p class="card-text" id="total-quantity"></p>
            <a href="/api/{{_id}}/purchase/" class="btn btn-primary" >Proceder al pago de <span id="total-quantity-text"></span></a>
          </div>
        </div>
      </div>
      {{/each}}
    </div>
  </div>
  <script src="../src/services/carts/cartCalculationService.js" id="data" type="application/json"></script>
  <script>
    function incrementarCantidad(cartId, productId) {
      const quantityElement = document.getElementById(`quantity-${cartId}-${productId}`);
      const currentQuantity = parseInt(quantityElement.textContent);
      const newQuantity = currentQuantity + 1;

      quantityElement.textContent = newQuantity;

      // Recalcular el total de la cantidad
      actualizarCantidad(cartId, productId)
      calcularTotalCantidad();
      calcularTotalPrecios()
      
      
    }

    function decrementarCantidad(cartId, productId) {
      const quantityElement = document.getElementById(`quantity-${cartId}-${productId}`);
      const currentQuantity = parseInt(quantityElement.textContent);
      const newQuantity = currentQuantity - 1;

      if (newQuantity >= 1) {
        quantityElement.textContent = newQuantity;

        // Recalcular el total de la cantidad
        actualizarCantidad(cartId, productId)
        calcularTotalCantidad();
        calcularTotalPrecios()
        
      }
    }

 function actualizarCantidad(cartId, productId) {
      const quantityElement = document.getElementById(`quantity-${cartId}-${productId}`);
      const newQuantity = parseInt(quantityElement.textContent);

      const url = `/api/carts/${cartId}/products/${productId}`;
      const requestData = {
        quantity: newQuantity
      };

      fetch(url, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(requestData)
      })
        .then(response => response.json())
        .then(data => {
          console.log('Respuesta del servidor:', data);
          // Actualizar el valor de la cantidad en el elemento HTML
          quantityElement.textContent = newQuantity;

          // Recalcular el total de la cantidad
          calcularTotalCantidad();
          
        })
        .catch(error => {
          console.error('Error al actualizar la cantidad del producto en el carrito:', error);
        });
    }
function calcularTotalPrecios() {
  const totalPriceElement = document.getElementById("total-price");
  const productElements = document.querySelectorAll(".card-body > ul > li");

  let total = 0;

  productElements.forEach(productElement => {
    const priceElement = productElement.querySelector(".price");
    const quantityElement = productElement.querySelector(".quantity-section > .btn-group > span[data-quantity]");

    console.log("Precio Elemento:", priceElement);
    console.log("Cantidad Elemento:", quantityElement);

    const price = parseFloat(priceElement.textContent.replace("Precio: $", ""));
    const quantity = parseInt(quantityElement.getAttribute("data-quantity"));

    console.log("Precio:", price);
    console.log("Cantidad:", quantity);

    const productTotal = price * quantity;
    total += productTotal;
  });

  console.log("Total:", total);

  totalPriceElement.textContent = `$${total.toFixed(2)}`;
}

    // Calcular el total de la cantidad de productos
    function calcularTotalCantidad() {
      const totalQuantityElement = document.getElementById("total-quantity");
      const productQuantities = Array.from(document.querySelectorAll(".card-body > ul > li > .quantity-section > .btn-group > span[id^='quantity-']")).map(quantityElement => parseInt(quantityElement.textContent));
      const total = productQuantities.reduce((accumulator, currentValue) => accumulator + currentValue, 0);
      totalQuantityElement.textContent = total.toString();

      // Actualizar la cantidad en el botón de proceder al pago
      const totalQuantityTextElement = document.getElementById("total-quantity-text");
      totalQuantityTextElement.textContent = `${total} productos`;
    }

    // Calcular el total inicial al cargar la página
    document.addEventListener("DOMContentLoaded", () => {
      calcularTotalPrecios();
      calcularTotalCantidad();
    });
  </script>
</body>

</html>
